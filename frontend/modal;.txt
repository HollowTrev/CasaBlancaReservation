{showModal && (
      <div className="fixed top-0 left-0 z-50 flex items-center justify-center w-full h-full my-6 ">
        <div className="w-full max-w-md p-6 bg-slate-600 rounded-xl ring-1 ring-black/5">
          <h2 className="mb-4 text-2xl font-bold text-center text-white">
            {selectedTodo ? "Edit Book" : "Add Booking"}
          </h2>
          <form className="flex flex-wrap" onSubmit={handleSubmit}>
          <div className="grid grid-cols-2 gap-4">
            <input
              type="text"
              name="fullname"
              value={formData.fullname}
              onChange={(e) => setFormData({ ...formData, fullname: e.target.value })}
              placeholder="Full Name"
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] mr-[2%]"
            />
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={(e) => setFormData({ ...formData, email: e.target.value })}
              placeholder="Email"
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] ml-[2%]"
            />
            <input
              type="tel"
              name="contactNo"
              value={formData.contactNo}
              onChange={(e) => setFormData({ ...formData, contactNo: e.target.value })}
              placeholder="Contact No."
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] mr-[2%]"
            />
            <select
              name="roomType"
              value={formData.roomType}
              onChange={(e) => setFormData({ ...formData, roomType: e.target.value })}
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] ml-[2%]"
            >
              <option value="">Select Room Type</option>
              <option value="Standard">Standard</option>
              <option value="Deluxe">Deluxe</option>
              <option value="Suite">Suite</option>
            </select>
            <input
              type="number"
              name="tableNumber"
              value={formData.tableNumber}
              onChange={(e) => setFormData({ ...formData, tableNumber: e.target.value })}
              placeholder="Table Number"
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] mr-[2%]"
            />
            <input
              type="text"
              name="numberOfPersons"
              value={formData.numberOfPersons}
              onChange={(e) => setFormData({ ...formData, numberOfPersons: e.target.value })}
              placeholder="Number of Persons"
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] ml-[2%]"
            />
            <select
            name="startTime"
            value={formData.startTime}
            onChange={(e) => setFormData({ ...formData, startTime: e.target.value })}
            className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-500 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] ml-[2%]"
          >
            <option value="">Select Start Time</option>
            <option value="8:00am ">8:00am</option>
            <option value="11:00am ">11:00am</option>
            <option value="12:00am">12:00am</option>
          </select>
          <select
              name="endTime"
              value={formData.endTime}
              onChange={(e) => setFormData({ ...formData, endTime: e.target.value })}
              className="bg-white-700 text-slate-800 border-0 rounded-md p-2 mb-4 focus:bg-white-600 focus:outline-none focus:ring-1 focus:ring-blue-500 transition ease-in-out duration-150 w-full md:w-[48%] ml-[2%]"
            >
              <option value="">Select End Time</option>
              <option value="11:00am">11:00am</option>
              <option value="12:00am">12:00am</option>
              <option value="1:00pm">1:00pm</option>
            </select>
            </div>
            <input
              type="text"
              name="purpose"
              value={formData.purpose}
              onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}
              placeholder="Purpose"
              className="w-full p-2 mb-4 transition duration-150 ease-in-out border-0 rounded-md text-slate-800 bg-white-700 focus:bg-white-600 focus:outline-none focus:ring-1 focus:ring-blue-500"
            />
            <div className="flex items-end justify-end ">
              <button
                type="submit" 
                className="px-4 py-2 mt-4  font-bold text-white transition duration-150 ease-in-out rounded-md md:mt-0 bg-gradient-to-r from-green-500 to-green-400 hover:bg-green-600 hover:to-green-600 w-full md:w-[48%] mr-[4%]"
              >
                {selectedTodo ? "Update" : "Submit"}
              </button>
              
              <button
                onClick={() => setShowModal(false)}
                className="px-4 py-2 mt-4 font-bold text-white transition duration-150 ease-in-out rounded-md md:mt-0 bg-gradient-to-r from-red-500 to-red-500 hover:bg-red-600 hover:to-red-600 w-full md:w-[48%] mr-[2%]"
              >
                Cancel
              </button>
            </div>
          </form>
        
      </div>
      </div>
    )}
    